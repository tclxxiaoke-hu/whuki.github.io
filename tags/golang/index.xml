<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Mason&#39;s Blog</title>
    <link>https://whuki.github.io/tags/golang/</link>
    <description>Recent content in golang on Mason&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 05 Sep 2022 21:30:00 +0800</lastBuildDate><atom:link href="https://whuki.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang错误处理(上)</title>
      <link>https://whuki.github.io/posts/go_error_1/</link>
      <pubDate>Mon, 05 Sep 2022 21:30:00 +0800</pubDate>
      
      <guid>https://whuki.github.io/posts/go_error_1/</guid>
      <description>Q: why golang的错误处理为什么这么设计？ 面向对象语言如java、c# 采用抛出异常的方式处理错误，这导致不管是什么样的错误都采用这种方式，所</description>
    </item>
    
    <item>
      <title>golang拷贝</title>
      <link>https://whuki.github.io/posts/golang_copy/</link>
      <pubDate>Sat, 03 Sep 2022 18:00:00 +0800</pubDate>
      
      <guid>https://whuki.github.io/posts/golang_copy/</guid>
      <description>浅拷贝 浅拷贝是指对地址的拷贝。 浅拷贝复制的是数据的指针地址，当数据发生变化的时候，被拷贝的数据也跟着发生变化。 golang引用类型的都是浅拷</description>
    </item>
    
  </channel>
</rss>
